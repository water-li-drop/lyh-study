程序的三种基本结构

1.顺序结构

    从上到下执行的代码就是顺序结构

    程序默认就是由上到下顺序执行的

2.分支结构

    根据不同的情况，执行对应代码
    (1)if语句

        语法结构

            if (/* 条件表达式 */) {
            // 执行语句
            }
            
            if (/* 条件表达式 */){
            // 成立执行语句
            } else {
            // 否则执行语句
            }
            
            if (/* 条件1 */){
            // 成立执行语句
            } else if (/* 条件2 */){
            // 成立执行语句
            } else if (/* 条件3 */){
            // 成立执行语句
            } else {
            // 最后默认执行语句
            }

    (2)三元运算符

        表达式1 ? 表达式2 : 表达式3
        是对if……else语句的一种简化写法

    (3)switch语句

        语法格式:

            switch (expression) {
            case 常量1:
                语句;
                break;
            case 常量2:
                语句;
                break;
            case 常量3:
                语句;
                break;
            …
            case 常量n:
                语句;
                break;
            default:
                语句;
                break;
            }

            break可以省略，如果省略，代码会继续执行下一个case
            switch 语句在比较值时使用的是全等操作符, 因此不会发生类型转换（例如，字符串'10' 不等于数值 10）
        

3.循环结构

    循环结构：重复做一件事情

4.布尔类型的隐式转换

    流程控制语句会把后面的值隐式转换成布尔类型

        转换为true   非空字符串  非0数字  true 任何对象
        转换成false  空字符串  0  false  null  undefined

        // 结果是什么？
        var a = !!'123';

