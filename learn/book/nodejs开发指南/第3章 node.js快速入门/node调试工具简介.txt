1.supervisor 
    可以帮助你实现这个功能，它会监视你对代码的改动，并自动重启 Node.js。
    
    (1)使用方法很简单，首先使用 npm 安装 supervisor：
        $ npm install -g supervisor
       如果你使用的是 Linux 或 Mac，直接键入上面的命令很可能会有权限错误。原因是 npm
       需要把 supervisor 安装到系统目录，需要管理员授权，可以使用  sudo npm install -g supervisor 命令来安装。
    (2)使用 supervisor 命令启动 app.js：
        $ supervisor app.js

    (3)控制台
        DEBUG: Running node-supervisor with
        DEBUG: program 'app.js'
        DEBUG: --watch '.'
        DEBUG: --extensions 'node|js'
        DEBUG: --exec 'node'
        DEBUG: Starting child process with 'node app.js'
        DEBUG: Watching directory '/home/byvoid/.' for changes.
        HTTP server is listening at port 3000.

        当代码被改动时，运行的脚本会被终止，然后重新启动。在终端中显示的结果如下：
        DEBUG: crashing child
        DEBUG: Starting child process with 'node app.js'
        HTTP server is listening at port 3000.
        
        supervisor 这个小工具可以解决开发中的调试问题


2.nodemon
    nodejs修改代码自动重启-nodemon模块
    （1）nodemon介绍：是一个基于Node.js开发的第三方命令行工具
    （2）安装：npm install --global nodemon
        所有使用--global安装的包都可以在任意目录执行
    （3）使用：把输入cmd的node改为nodemon
        ----> node app.js改为ndoemon app.js
     只要是通过nodemon启动的服务，它会监视文件变化，当文件发生变化时会自动重启服务器
